#! /usr/bin/env python3

# Given a bitbake log, identify what tasks are still running by the end.
#
# Helpful when bitbake hangs as there are tasks still executing which have hung.
#
# Licensed under the MIT license


import enum
import sys
import re

states = enum.Enum("State", "Started Succeeded Failed")

def log_parser(stream):
    task_re = re.compile(r"NOTE: recipe (?P<recipe>.+): task (?P<task>.+): (?P<state>\w+)")
    for line in stream:
        m = task_re.search(line)
        if m:
            yield states[m.group("state")], m.group("recipe"), m.group("task")

active = set()
for state, recipe, task in log_parser(open(sys.argv[1], encoding="utf-8")):
    name = recipe + ":" + task
    if state == states.Started:
        active.add(name)
    elif state in (states.Succeeded, states.Failed):
        active.remove(name)
    else:
        print(f"ERROR: Unhandled state {state}.")
        break

print("Active tasks are:")
for t in sorted(active):
    print(" %s" % t)
